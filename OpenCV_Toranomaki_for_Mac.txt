OpenCV虎の巻（Mac編）by Sunao Hashimoto, 2015.11.1

================================================================================
【1】XcodeとCommand Line Toolsのインストール
================================================================================

(1-1) App StoreからXcodeを選択し、インストールする。

(1-2) Xcodeを起動する。

(1-3) メニューから Xcode → Open Developer Tool → More Developer Tools とたどる

(1-4) サインインが求められるのでIDとパスワードを入力してサインイン。

(1-5) 一覧から「Command Line Tools OS X 10.10 for Xcode 7」をダウンロード。
     （注：自分のXcodeのバージョンに合うCommand Line Toolsを選択すること）

(1-6) ダウンロードされたdmgファイルを開き、中にあるpkgファイルをダブルクリック。

(1-7) 表示の指示に従いインストール。


================================================================================
【2】MacPortsのインストール
================================================================================

(2-1) MacPortsのサイトへ行く。 https://www.macports.org/

(2-2) 左のメニューから"Installing MacPorts"のリンクをクリック。

(2-3) "Install MacPorts for your version of OS X:"と書いてあるところから
      自分のOSのバージョンに合うものをクリックし、MacPortsのpkgファイルを
      ダウンロードする。

(2-4) ダウンロードしたpkgファイルをダブルクリックしてインストール。

(2-5) 画面右上の虫メガネマーク（Spotlight検索）をクリックし、
      「terminal」と入力し、ターミナルを起動。
      ターミナルが起動したら以下のコマンドを入力する。

sudo port sync

※sudoで始まるコマンドを入力した際、Password:●と表示されたらパスワードを
タイプしてエンターキーを押す。このとき、●は１つしか表示されないので注意。


(2-6) ターミナルで以下のコマンドを入力し、インストールしたMacPortsのバージョン
      を確認する。

port version

ここでバージョンが表示されたら正常にインストールできている。
このドキュメントを書いている2015年10月5日現在の最新版はVersion: 2.3.4。


================================================================================
【3】OpenCVのインストール
================================================================================

(3-1) ターミナルで以下のコマンドを入力して、OpenCVの最新バージョンを確認する。

port info opencv

（注：ここで3.0.0以降のバージョン名が表示されたらOK）

(3-2) ターミナルで以下のコマンドを順番に入力してOpenCVに必要な関連ライブラリと
      OpenCV本体をインストールする。

sudo port install pkgconfig zlib bzip2
sudo port install libpng jpeg jasper tiff ilmbase openexr ffmpeg
sudo port install opencv


※一つ一つの処理が終わるのをちゃんと待つ。インストール処理中はいろいろ表示される
が、それぞれ最後に「--->  No broken files found.」と表示されたら処理終了なのでそ
れを待とう。途中でターミナルを閉じたりしないこと。


================================================================================
【4】プロジェクトの作成、プログラムの作成、ビルド、実行
================================================================================

(4-1) Xcodeを起動したら、「Create a new Xcode project」を選択。

(4-2) 作成するプロジェクトのテンプレートの選択画面が表示されるので、
      左から「OS X」を選び、右から「Command Line Tool」を選んで
     「Next」をクリック。

(4-3) プロジェクトの設定の画面が表示されるので、Product Nameを「OpenCVtest」とか
      適当に設定し、Languageを「C++」にしたら「Next」をクリック。

(4-4) プロジェクトの保存先を聞いてくるので、例えばデスクトップなどを選んで
      「Create」をクリック。

(4-5) 画面中ほどにある「Build Settings」をクリックし、「All」をクリックしたら
      検索窓に「header search」と入力する。

(4-6) 「Header Search Paths」という項目が表示されるので、その項目をクリックして
      展開し、「Debug」という項目の中に以下のパスを追加する。

/opt/local/include

(4-7) 次に、検索窓に「library search」と入力する。「Library Search Paths」という
      項目が表示されるので、クリックして項目を展開し、「Debug」という項目の中に
      以下のパスを追加する。

/opt/local/lib

(4-8) 「Build Settings」の右にある「Build Phases」という項目をクリックする。

(4-9) 「Link Binary With Libraries」という項目をクリックして展開し、
      ＋ボタンをクリックする。

(4-10) ダイアログが表示されたら「Add Other...」をクリック。検索窓のところで
      「libopencv .dylib」と入力して検索する。■■■■.3.0.0.dylibという名前の
      ファイル（16個）をすべて選択して「Open」をクリックする。

※本当は全部は必要ないが、今後必要になったときにいちいち追加するのが面倒なので
この機会にすべて追加してしまう。

(4-11) 画面左から「main.cpp」を選んで開き、ソースコードを書く。
       以下はサンプルコード。

---------------------------------------------------------------------
#include <opencv2/opencv.hpp>

int main() {
	cv::Mat image = cv::imread("Lenna.jpg"); // 画像の読み込み
	cv::namedWindow("input");                // ウィンドウの準備
	cv::imshow("input", image);              // 画像の表示
	cv::waitKey();                           // キー入力待ち
	cv::imwrite("output.jpg", image);        // 画像の保存

	return 0;
}
---------------------------------------------------------------------

(4-12) プログラムを書いたら、command + B を押していったんビルドする。

(4-13) プログラムから読み込みたい画像ファイル（ここではLenna.jpg）があるときは、
       Xcodeの画面左から「Products」を開いて中にあるプロジェクト名を右クリックし、
       「Show in Finder」を選択。これで実行時にローカルフォルダとなる場所が
       開かれるので、そこに画像ファイルを置く。

(4-14) 実行ボタン（三角のボタン）を押して、プログラムが正しくビルドできれば
       「Build Succeeded」と表示され、プログラムが実行される。


以上！！！


